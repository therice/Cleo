local ItemUtil

describe("LibItemUtil", function()
    setup(function()
        loadfile("Test/TestSetup.lua")(false, 'LibItemUtil')
        loadfile("Test/WowXmlParser.lua")()
        ParseXmlAndLoad('Libs/CallbackHandler-1.0/CallbackHandler-1.0.xml')
        ParseXmlAndLoad('Libs/AceEvent-3.0/AceEvent-3.0.xml')
        ParseXmlAndLoad('Libs/LibDeformat-3.0/LibDeformat-3.0.xml')
        ParseXmlAndLoad('Libs/LibDeflate/LibDeflate.xml')
        ParseXmlAndLoad('Libs/LibClass-1.1/LibClass-1.1.xml')
        ParseXmlAndLoad('Libs/LibLogging-1.1/LibLogging-1.1.xml')
        ParseXmlAndLoad('Libs/LibUtil-1.2/LibUtil-1.2.xml')
        ParseXmlAndLoad('Libs/LibItemUtil-1.2/LibItemUtil-1.2.xml')
        loadfile("Libs/LibItemUtil-1.2/Test/LibItemUtilTestData.lua")()
        ConfigureLogging()
        ItemUtil = LibStub('LibItemUtil-1.2')

    end)
    teardown(function()
        After()
    end)
    describe("item ids", function()
        it("resolved from item links", function()
            local id = ItemUtil:ItemLinkToId("|cff9d9d9d|Hitem:7073::::::::::::|h[Broken Fang]|h|r")
            assert.equals(id, 7073)
        end)
        it("resolve whether a class can use", function()
            -- 28 ('Hitem:19724' - Primal Hakkari Aegis : Hunter, Rogue, Priest)
            assert.is.True(ItemUtil:ClassCanUse("PRIEST", 28))
            assert.is.Not.True(ItemUtil:ClassCanUse("DRUID", 28))
            assert.is.Not.True(ItemUtil:ClassCanUse("WARRIOR", 28))
            assert.is.True(ItemUtil:ClassCanUse("ROGUE", 28))
            assert.is.True(ItemUtil:ClassCanUse("HUNTER", 28))
            
            -- 4294967295 ('Hitem:12757' Breastplate of Bloodthirst)
            assert.is.Not.True(ItemUtil:ClassCanUse('PRIEST', 4294967295, INVTYPE_CHEST, LE_ITEM_CLASS_ARMOR, LE_ITEM_ARMOR_LEATHER))
            assert.is.True(ItemUtil:ClassCanUse('ROGUE', 4294967295, INVTYPE_CHEST, LE_ITEM_CLASS_ARMOR, LE_ITEM_ARMOR_LEATHER))
            assert.is.True(ItemUtil:ClassCanUse('WARRIOR', 4294967295, INVTYPE_CHEST, LE_ITEM_CLASS_ARMOR, LE_ITEM_ARMOR_LEATHER))
        end)
        it("resolve to item info", function()
            local fired = false
            ItemUtil:QueryItemInfo(18832, function() fired = true end)
            WoWAPI_FireEvent('GET_ITEM_INFO_RECEIVED', 18832, true)
            assert.is_true(fired)
        end)
    end)
    describe("item links/strings", function()
        it("item string is resolved", function ()
            assert.equal(
                    ItemUtil:ItemLinkToItemString('|cff9d9d9d|Hitem:22356:0:0:0:0:0:0:0:80:0:0:0:0|h[Desecrated Waistguard]|h|r'),
                    'item:22356:0:0:0:0:0:0:0:80:0:0:0:0'
            )
            assert.equal(ItemUtil:ItemLinkToItemString(
                    'item:22356:0:0:0:0:0:0:::0:0:0:0'),
                    'item:22356:0:0:0:0:0:0:::0:0:0:0'
            )
        end)
        it("item string is neutralized", function()
            local neutralized = ItemUtil:NeutralizeItem('item:22356:0:0:0:0:0:0:0:80:0:0:0:0')
            assert.equal('item:22356:0:0:0:0:0:0::::0:', neutralized)
            neutralized = ItemUtil:NeutralizeItem('item:22356:0:0:0:0:0:0:0:60:0:0:0:0')
            assert.equal('item:22356:0:0:0:0:0:0::::0:', neutralized)
            neutralized = ItemUtil:NeutralizeItem('|cff9d9d9d|Hitem:22356:0:0:0:0:0:0:0:60:0:0:0:0|h[Desecrated Waistguard]|h|r')
            assert.equal('|cff9d9d9d|Hitem:22356:0:0:0:0:0:0::::0:|h[Desecrated Waistguard]|h|r', neutralized)
        end)
        it("item name is resolved", function()
            local name = ItemUtil:ItemLinkToItemName('|cff9d9d9d|Hitem:22356:0:0:0:0:0:0::|h[Desecrated Waistguard]|h|r')
            assert.equal(name, 'Desecrated Waistguard')
        end)
        it("item color is resolved", function()
            local color = ItemUtil:ItemLinkToColor('|cff9d9d9d|Hitem:22356:0:0:0:0:0:0::|h[Desecrated Waistguard]|h|r')
            assert.equal(color, '|cff9d9d9d')
        end)
        it("can be detected", function()
            local link = "|cff9d9d9d|Hitem:18832:2564:0:0:0:0:0:0:60:0:0:0:0|h[Brutality Blade]|h|r"
            assert(ItemUtil:ContainsItemString(link))
            -- |cff9d9d9d|Hitem:18832:2564:0:0:0:0:0:::0:0:0:0|h[Brutality Blade]|h|r
            local neutralized = ItemUtil:NeutralizeItem(link)
            assert(ItemUtil:ContainsItemString(neutralized))
            -- item:18832:2564:0:0:0:0:0:::0:0:0:0
            local itemString = ItemUtil:ItemLinkToItemString(neutralized)
            assert(ItemUtil:ContainsItemString(itemString))
            -- 18832:2564:0:0:0:0:0:::0:0:0:0
            local clean = gsub(itemString, "item:", "")
            assert(not ItemUtil:ContainsItemString(clean))
        end)
    end)
    describe("custom items", function()
        it("is empty upon loading", function()
            assert.equal(0, GetSize(ItemUtil:GetCustomItems()))
        end)
        it("can be supplied", function()
            ItemUtil:SetCustomItems(TestCustomItems)
            assert.equal(4, GetSize(ItemUtil:GetCustomItems()))
        end)
        it("can be added", function()
            ItemUtil:SetCustomItems({})
            assert.equal(0, GetSize(ItemUtil:GetCustomItems()))
            ItemUtil:AddCustomItem(18422, 4, 74, "INVTYPE_NECK", "Horde")
            assert.equal(1, GetSize(ItemUtil:GetCustomItems()))
            ItemUtil:AddCustomItem(20928, 4, 78, "INVTYPE_SHOULDER")
            assert.equal(2, GetSize(ItemUtil:GetCustomItems()))
        end)
        it("can be removed", function()
            ItemUtil:SetCustomItems({})
            ItemUtil:AddCustomItem(18422, 4, 74, "INVTYPE_NECK", "Horde")
            ItemUtil:AddCustomItem(20928, 4, 78, "INVTYPE_SHOULDER")
            assert.equal(2, GetSize(ItemUtil:GetCustomItems()),
                    "Expected custom item count incorrect"
            )
            ItemUtil:RemoveCustomItem(18422)
            assert.equal(1, GetSize(ItemUtil:GetCustomItems()),
                    "Expected custom item count incorrect"
            )
        end)
    end)
end)
